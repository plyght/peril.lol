@import url('https://fonts.cdnfonts.com/css/jetbrains-mono-2');

:root {
    --font-family: "IBM Plex Mono", monospace;
    --line-height: 1.40rem;
    --border-thickness: 2px;
    
    /* Dark theme (default) - more minimal/black with unique accent */
    --text-color-dark: #f2f2f2;
    --text-color-alt-dark: #a0a0a0;
    --background-color-dark: #000000;
    --background-color-alt-dark: #0a0a0a;
    --accent-dark: #ff5277;
    --accent-rgb-dark: 255, 82, 119;
    
    /* Light theme - more minimal with matching accent */
    --text-color-light: #2a2a2a;
    --text-color-alt-light: #555555;
    --background-color-light: #f0f0f0;
    --background-color-alt-light: #e0e0e0;
    --accent-light: #d6294c;
    --accent-rgb-light: 214, 41, 76;
    
    /* Font weights - adjusted for IBM Plex Mono */
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    
    /* Default to dark theme */
    --text-color: var(--text-color-dark);
    --text-color-alt: var(--text-color-alt-dark);
    --background-color: var(--background-color-dark);
    --background-color-alt: var(--background-color-alt-dark);
    --accent: var(--accent-dark);
    --accent-rgb: var(--accent-rgb-dark);
    
    font-family: var(--font-family);
    font-weight: var(--font-weight-normal);
    font-style: normal;
    font-variant-numeric: tabular-nums;
    letter-spacing: -0.01em;
    font-size: 15px;
}

/* Apply light theme when user prefers light mode */
@media (prefers-color-scheme: light) {
    :root:not([data-theme="dark"]) {
        --text-color: var(--text-color-light);
        --text-color-alt: var(--text-color-alt-light);
        --background-color: var(--background-color-light);
        --background-color-alt: var(--background-color-alt-light);
        --accent: var(--accent-light);
        --accent-rgb: var(--accent-rgb-light);
    }
}

/* Manual theme selection through data-theme attribute */
:root[data-theme="light"] {
    --text-color: var(--text-color-light);
    --text-color-alt: var(--text-color-alt-light);
    --background-color: var(--background-color-light);
    --background-color-alt: var(--background-color-alt-light);
    --accent: var(--accent-light);
    --accent-rgb: var(--accent-rgb-light);
}

:root[data-theme="dark"] {
    --text-color: var(--text-color-dark);
    --text-color-alt: var(--text-color-alt-dark);
    --background-color: var(--background-color-dark);
    --background-color-alt: var(--background-color-alt-dark);
    --accent: var(--accent-dark);
    --accent-rgb: var(--accent-rgb-dark);
}

* {
    box-sizing: border-box;
}

/* Add smoother transitions for theme changes */
html, body {
    transition: 
        background-color 0.5s cubic-bezier(0.4, 0.0, 0.2, 1),
        color 0.5s cubic-bezier(0.4, 0.0, 0.2, 1);
}

/* Apply transitions to all elements for smoother theme switch */
* {
    transition-property: background-color, color, border-color, box-shadow, transform;
    transition-duration: 0.5s;
    transition-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1);
}

/* Override for specific elements that need different transitions */
a, button, input, th, td, img, hr, details, .blog-post, .site-nav a, pre, code, blockquote {
    transition: 
        background-color 0.5s cubic-bezier(0.4, 0.0, 0.2, 1),
        color 0.5s cubic-bezier(0.4, 0.0, 0.2, 1),
        border-color 0.5s cubic-bezier(0.4, 0.0, 0.2, 1),
        transform 0.3s cubic-bezier(0.4, 0.0, 0.2, 1),
        box-shadow 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
}

* + * {
    margin-top: var(--line-height);
}

html {
    display: flex;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    flex-direction: column;
    align-items: center;
    background: var(--background-color);
    color: var(--text-color);
}

body {
    position: relative;
    width: 100%;
    min-height: 100vh;
    margin: 0;
    padding: var(--line-height) 2ch;
    max-width: calc(min(80ch, round(down, 100%, 1ch)));
    line-height: var(--line-height);
    overflow-x: hidden;
    background-color: transparent;
    display: flex;
    flex-direction: column;
}

@media screen and (max-width: 480px) {
    :root {
        font-size: 14px;
    }
    body {
        padding: var(--line-height) 1ch;
    }
}

h1, h2, h3, h4, h5, h6 {
    font-weight: var(--font-weight-bold);
    margin: calc(var(--line-height) * 2) 0 var(--line-height);
    line-height: var(--line-height);
}

h1 {
    font-size: 2rem;
    line-height: calc(2 * var(--line-height));
    margin-bottom: calc(var(--line-height) * 2);
    text-transform: uppercase;
}
h2 {
    font-size: 1rem;
    text-transform: uppercase;
}

hr {
    position: relative;
    display: block;
    height: var(--line-height);
    margin: calc(var(--line-height) * 1.5) 0;
    border: none;
    color: var(--text-color);
}
hr:after {
    display: block;
    content: "";
    position: absolute;
    top: calc(var(--line-height) / 2 - var(--border-thickness));
    left: 0;
    width: 100%;
    border-top: calc(var(--border-thickness) * 3) double var(--text-color);
    height: 0;
}

a {
    text-decoration-thickness: var(--border-thickness);
}

a:link, a:visited {
    color: var(--text-color);
    position: relative;
    transition: all 0.3s ease;
}

a:hover {
    color: var(--accent);
    text-decoration: underline;
    text-decoration-color: var(--accent);
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
}

p {
    margin-bottom: var(--line-height);
}

strong {
    font-weight: var(--font-weight-bold);
}
em {
    font-style: italic;
}

sub {
    position: relative;
    display: inline-block;
    margin: 0;
    vertical-align: sub;
    line-height: 0;
    width: calc(1ch / 0.75);
    font-size: .75rem;
}

table {
    position: relative;
    top: calc(var(--line-height) / 2);
    width: calc(round(down, 100%, 1ch));
    border-collapse: collapse;
    margin: 0 0 calc(var(--line-height) * 2);
}

th, td {
    border: var(--border-thickness) solid var(--text-color);
    padding:
            calc((var(--line-height) / 2))
            calc(1ch - var(--border-thickness) / 2)
            calc((var(--line-height) / 2) - (var(--border-thickness)))
;
    line-height: var(--line-height);
    vertical-align: top;
    text-align: left;
}
table tbody tr:first-child > * {
    padding-top: calc((var(--line-height) / 2) - var(--border-thickness));
}


th {
    font-weight: 700;
}
.width-min {
    width: 0%;
}
.width-auto {
    width: 100%;
}

.header {
    margin-bottom: calc(var(--line-height) * 1);
    max-height: calc(100vh - var(--line-height) * 3);
    min-height: auto;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
}
.header h1 {
    margin: 0;
}
.header tr td:last-child {
    text-align: right;
}

p {
    word-break: break-word;
    word-wrap: break-word;
    hyphens: auto;
    line-height: 1.6;
    max-width: 72ch;
}

img, video {
    display: block;
    width: 100%;
    object-fit: contain;
    overflow: hidden;
}
img {
    font-style: italic;
    color: var(--text-color-alt);
}

details {
    border: var(--border-thickness) solid var(--text-color);
    padding: calc(var(--line-height) - var(--border-thickness)) 1ch;
    margin-bottom: var(--line-height);
}

summary {
    font-weight: var(--font-weight-medium);
    cursor: pointer;
}
details[open] summary {
    margin-bottom: var(--line-height);
}

details ::marker {
    display: inline-block;
    content: '▶';
    margin: 0;
}
details[open] ::marker {
    content: '▼';
}

details :last-child {
    margin-bottom: 0;
}

pre {
    white-space: pre;
    overflow-x: auto;
    margin: var(--line-height) 0;
    overflow-y: hidden;
}
figure pre {
    margin: 0;
}

pre, code {
    font-family: var(--font-family);
}

code {
    font-weight: var(--font-weight-medium);
}

figure {
    margin: calc(var(--line-height) * 2) 3ch;
    overflow-x: auto;
    overflow-y: hidden;
}

figcaption {
    display: block;
    font-style: italic;
    margin-top: var(--line-height);
}

ul, ol {
    padding: 0;
    margin: 0 0 var(--line-height);
}

ul {
    list-style-type: square;
    padding: 0 0 0 2ch;
}
ol {
    list-style-type: none;
    counter-reset: item;
    padding: 0;
}
ol ul,
ol ol,
ul ol,
ul ul {
    padding: 0 0 0 3ch;
    margin: 0;
}
ol li:before {
    content: counters(item, ".") ". ";
    counter-increment: item;
    font-weight: var(--font-weight-medium);
}

li {
    margin: 0;
    padding: 0;
}

li::marker {
    line-height: 0;
}

::-webkit-scrollbar {
    height: var(--line-height);
}

input, button, textarea {
    border: var(--border-thickness) solid var(--text-color);
    padding:
            calc(var(--line-height) / 2 - var(--border-thickness))
            calc(1ch - var(--border-thickness));
    margin: 0;
    font: inherit;
    font-weight: inherit;
    height: calc(var(--line-height) * 2);
    width: auto;
    overflow: visible;
    background: var(--background-color);
    color: var(--text-color);
    line-height: normal;
    -webkit-font-smoothing: inherit;
    -moz-osx-font-smoothing: inherit;
    -webkit-appearance: none;
}

input[type=checkbox] {
    display: inline-grid;
    place-content: center;
    vertical-align: top;
    width: 2ch;
    height: var(--line-height);
    cursor: pointer;
}
input[type=checkbox]:checked:before {
    content: "";
    width: 1ch;
    height: calc(var(--line-height) / 2);
    background: var(--text-color);
}

button:focus, input:focus {
    --border-thickness: 3px;
    outline: none;
}

input {
    width: calc(round(down, 100%, 1ch));
}
::placeholder {
    color: var(--text-color-alt);
    opacity: 1;
}
::-ms-input-placeholder {
    color: var(--text-color-alt);
}
button::-moz-focus-inner {
    padding: 0;
    border: 0
}

button {
    text-transform: uppercase;
    font-weight: var(--font-weight-medium);
    cursor: pointer;
}

button:hover {
    background: var(--background-color-alt);
}
button:active {
    transform: translate(2px, 2px);
}

label {
    display: block;
    width: calc(round(down, 100%, 1ch));
    height: auto;
    line-height: var(--line-height);
    font-weight: var(--font-weight-medium);
    margin: 0;
}

label input {
    width: 100%;
}

.tree, .tree ul {
    position: relative;
    padding-left: 0;
    list-style-type: none;
    line-height: var(--line-height);
}
.tree ul {
    margin: 0;
}
.tree ul li {
    position: relative;
    padding-left: 1.5ch;
    margin-left: 1.5ch;
    border-left: var(--border-thickness) solid var(--text-color);
}
.tree ul li:before {
    position: absolute;
    display: block;
    top: calc(var(--line-height) / 2);
    left: 0;
    content: "";
    width: 1ch;
    border-bottom: var(--border-thickness) solid var(--text-color);
}
.tree ul li:last-child {
    border-left: none;
}
.tree ul li:last-child:after {
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    content: "";
    height: calc(var(--line-height) / 2);
    border-left: var(--border-thickness) solid var(--text-color);
}

.grid {
    --grid-cells: 0;
    display: flex;
    gap: 1ch;
    width: calc(round(down, 100%, (1ch * var(--grid-cells)) - (1ch * var(--grid-cells) - 1)));
    margin-bottom: var(--line-height);
}

.grid > *,
.grid > input {
    flex: 0 0 calc(round(down, (100% - (1ch * (var(--grid-cells) - 1))) / var(--grid-cells), 1ch));
}
.grid:has(> :last-child:nth-child(1)) { --grid-cells: 1; }
.grid:has(> :last-child:nth-child(2)) { --grid-cells: 2; }
.grid:has(> :last-child:nth-child(3)) { --grid-cells: 3; }
.grid:has(> :last-child:nth-child(4)) { --grid-cells: 4; }
.grid:has(> :last-child:nth-child(5)) { --grid-cells: 5; }
.grid:has(> :last-child:nth-child(6)) { --grid-cells: 6; }
.grid:has(> :last-child:nth-child(7)) { --grid-cells: 7; }
.grid:has(> :last-child:nth-child(8)) { --grid-cells: 8; }
.grid:has(> :last-child:nth-child(9)) { --grid-cells: 9; }

/* Theme toggle styling */
.theme-toggle-nav {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 36px; 
    width: 36px;
    border: none;
    background: transparent !important;
    color: var(--text-color);
    cursor: pointer;
    z-index: 100;
    padding: 0;
    margin: 0;
    transition: all 0.2s ease-in-out;
    text-decoration: none;
    position: absolute;
    right: 0.5rem;
}

.theme-toggle-nav:hover {
    color: var(--accent);
    background: transparent !important;
    transform: scale(1.1);
}

:root[data-theme="light"] .theme-toggle-nav .sun-icon {
    color: #000000;
}

:root[data-theme="dark"] .theme-toggle-nav .moon-icon {
    color: #ffffff;
    stroke-width: 2;
}

.toggle-icon-container {
    position: relative;
    width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.sun-icon, .moon-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: opacity 0.3s ease, transform 0.3s ease;
}

.dark-theme .moon-icon {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
}

.dark-theme .sun-icon {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.5);
}

.light-theme .sun-icon {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
}

.light-theme .moon-icon {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.5);
}

.theme-toggle-nav:active {
    transform: scale(0.95);
    background: transparent !important;
}

/* Special transition class for smoother theme switching */
html {
    transition: background-color 0.5s ease;
}

.theme-transition {
    pointer-events: none; /* Prevent clicking during transition */
}

.theme-transition::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--background-color);
    z-index: 9999;
    opacity: 0;
    animation: fadeInOut 1.2s ease-in-out forwards;
    pointer-events: none;
}

@keyframes fadeInOut {
    0% { opacity: 0; }
    50% { opacity: 0.15; }
    100% { opacity: 0; }
}

/* Apply smoother transitions to all elements */
.theme-transition * {
    transition: 
        background-color 0.7s ease,
        color 0.7s ease,
        border-color 0.7s ease !important;
}

@media screen and (max-width: 480px) {
    .theme-toggle {
        right: 1ch;
    }
}

/* No animations class to prevent animation flashes during page load */
.no-animations *,
.no-animations *::before,
.no-animations *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    animation-delay: 0ms !important;
}

/* DEBUG UTILITIES */

.debug .debug-grid {
    --color: color-mix(in srgb, var(--text-color) 10%, var(--background-color) 90%);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    background-image:
            repeating-linear-gradient(var(--color) 0 1px, transparent 1px 100%),
            repeating-linear-gradient(90deg, var(--color) 0 1px, transparent 1px 100%);
    background-size: 1ch var(--line-height);
    margin: 0;
}

.debug .off-grid {
    background: rgba(255, 0, 0, 0.1);
}

.debug-toggle-label {
    text-align: right;
}